[
    {
        "ref": "https://julianstanley.com/blog/ubuntu_ssd/",
        "title": "Upgrading to a larger SSD on Ubuntu",
        "section": "blog",
        "tags": ["ubuntu","installation"],
        "date" : "2019.05.05",
        "body": "Today I upgraded the base 256 GB SSD (2.5 mm) on my Thinkpad T460 to a 1 TB Samsung 860 EVO.\nIt took me a few google searches to learn how to make the transition. In the end, I used Tuxboot to make a bootable Clonezilla USB drive, and then GParted to resize my partition. Here\u0026rsquo;s what I did step-by-step:\n Connect your new SSD via USB. I used a StarTech cable from Amazon. Download Tuxboot (from the SourceForce Repo). Extract and install Tuxboot.  I needed to run apt-get install libqt4-dev, apt-get install mtools, and then ./INSTALL.  Run sudo ./tuxboot to run the tuxboot GUI. On the first line, select \u0026ldquo;On-Line Distribution\u0026rdquo; and \u0026ldquo;clonezilla_live_stable\u0026rdquo;, connect an empty USB drive, select that drive on the last line, and click \u0026ldquo;OK\u0026rdquo;. After tuxboot makes a bootable clonezilla USB, boot from that USB. Follow the disk-to-disk clone tutorial from on the Clonezilla website. After restarting, download Gparted with sudo apt-get gparted. Follow the instructions in the GUI to resize the new disk to the full ~950 GB. Physically install the new SSD, and you should be good to go!  "
    }
,
    {
        "ref": "https://julianstanley.com/blog/mongo_rshiny/",
        "title": "Connecting a remote MongoDB database with R/Shiny",
        "section": "blog",
        "tags": ["projects","R","shiny","technical"],
        "date" : "2019.04.24",
        "body": " While making a Shiny App for a lab project (Sensor Overlord), I wanted to create a feature where users could input sensor data into a database, where it could be accessible to other users.\nI decided to give MongoDB a shot, mostly becuase of the free hosting services available on MongoDB\u0026rsquo;s website.\nAnd it was actually extremely straightforward. There are great resources available online, like the mongolite user manual and the shiny persistent data storage page.\nBut it still took some troubleshooting on my part, so I wanted to share my mongodb.com-specific guide.\nMongoDB.com free cluster setup and configuration  Create an account on cloud.mongodb.com. Set up a basic (free) cluster, give it a name. I named mine SensorOverlordCluster. On the main cluster page, navigate to the \u0026ldquo;Security\u0026rdquo; tab and add a user.  I\u0026rsquo;ll give mine the username myself and the password letmein.  Back on the \u0026ldquo;Overview\u0026rdquo; tab, click the name of your cluster. In the new screen that appears, click the \u0026ldquo;Collections\u0026rdquo; tab. Create a new database and write down the database and collection name. For mine, the database name was sensordb and the collection name was responses.  Writing and reading MongoDB from R  Install the mongolite package  I\u0026rsquo;m running Ubuntu and had to run sudo apt-get install libssl-dev libsasl2-dev to get the dependencies I needed for my system. See the the mongolite user manual for more info specific to your system. install.packages(\u0026quot;mongolite\u0026quot;) for the CRAN version or devtools::install_ github(\u0026quot;jeroen/mongolite\u0026quot;) for the development version.  Save some data to your database. I\u0026rsquo;ll put the code below.\n Note that the host should me mnopd.mongodb.net if you\u0026rsquo;re using mongodb.net\u0026rsquo;s hosting service. If that doesn\u0026rsquo;t work, check the base url that\u0026rsquo;s given when you click \u0026ldquo;connect\u0026rdquo; on the main overviewpage on cloud.mongodb.com, and then click \u0026ldquo;Connect Your Application\u0026rdquo; and set your driver as C version 1.9 or later. Your eventual url input should mimic that \u0026ldquo;connection string only\u0026rdquo; field.\noptions(mongodb = list( \u0026#34;cluster\u0026#34; = \u0026#34;sensoroverlordcluster\u0026#34;, \u0026#34;host\u0026#34; = \u0026#34;mnopd.mongodb.net\u0026#34;, \u0026#34;username\u0026#34; = \u0026#34;myself\u0026#34;, \u0026#34;password\u0026#34; = \u0026#34;letmein\u0026#34; )) databaseName \u0026lt;- \u0026#34;sensordb\u0026#34; collectionName \u0026lt;- \u0026#34;responses\u0026#34; saveData \u0026lt;- function(data) { # Connect to the database db \u0026lt;- mongo(collection = collectionName, url = sprintf( \u0026#34;mongodb+srv://%s:%s@%s-%s/%s?retryWrites=true\u0026#34;, options()$mongodb$username, options()$mongodb$password, options()$mongodb$cluster, options()$mongodb$host, databaseName)) # Insert the data into the mongo collection as a data.frame data \u0026lt;- as.data.frame(data) db$insert(data) }   \u0026nbsp;\n Once you use the saveData(data) function to save some data, you can load it right back up!\nloadData \u0026lt;- function() { # Connect to the database db \u0026lt;- mongo(collection = collectionName, url = sprintf( \u0026#34;mongodb+srv://%s:%s@%s/%s\u0026#34;, options()$mongodb$username, options()$mongodb$password, options()$mongodb$host, databaseName)) # Read all the entries data_output \u0026lt;- db$find() data_output }  "
    }
,
    {
        "ref": "https://julianstanley.com/blog/buzzfeed_ratiometric/",
        "title": "What Buzzfeed Quizzes have to do with Ratiometric Microscopy",
        "section": "blog",
        "tags": ["rogfp","ratiometric microscopy","projects","communication"],
        "date" : "2019.03.18",
        "body": "  \u0026nbsp; \u0026nbsp;\nScience is notoriously poorly communicated. I was recently browsing the DePace Lab Website and it linked me to a fantastic video called \u0026ldquo;Teaching Matters\u0026rdquo; by Professor Andrew Murray.\nMy interest in science communication is nothing new, but the video nonetheless made me think twice about how I\u0026rsquo;m presenting my research. Not only does science need to be communicated to the public (who funds most university research) but it also needs to be better communicated to other scientists, especially those who may benefit from the research but who are in tangential fields with different jargon.\nRight now I\u0026rsquo;m working on putting together my analysis of two-state ratiometric sensors, like the roGFP class of sensors. I\u0026rsquo;ve always struggled to describe what I\u0026rsquo;m doing, so let\u0026rsquo;s give a rephrasing a shot now.\nSlant: A Buzzfeed-Style Quiz for Sensors ~ To be continued when I get around to writing more of this ~\n"
    }
,
    {
        "ref": "https://julianstanley.com/blog/emoji-support/",
        "title": "Emoji Support",
        "section": "blog",
        "tags": [],
        "date" : "2019.01.01",
        "body": "Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }"
    }
,
    {
        "ref": "https://julianstanley.com/blog/markdown-syntax/",
        "title": "Markdown Syntax Guide",
        "section": "blog",
        "tags": [],
        "date" : "2019.01.01",
        "body": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline\u0026nbsp;\u0026nbsp;\u0026nbsp; Markdown\u0026nbsp;\u0026nbsp;\u0026nbsp; In\u0026nbsp;\u0026nbsp;\u0026nbsp; Table     italics bold strikethrough\u0026nbsp;\u0026nbsp;\u0026nbsp; code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. [return]  "
    }
,
    {
        "ref": "https://julianstanley.com/blog/math-typesetting/",
        "title": "Math Typesetting",
        "section": "blog",
        "tags": null,
        "date" : "2019.01.01",
        "body": "Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026quot;math.html\u0026quot; . }} {{ end }}   To enable KaTex globally set the parameter math to true in a project's configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions Examples Inline math: \\( \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… \\)\nBlock math:\n\\[ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } \\]\n"
    }
,
    {
        "ref": "https://julianstanley.com/blog/placeholder-text/",
        "title": "Placeholder Text",
        "section": "blog",
        "tags": [],
        "date" : "2019.01.01",
        "body": "Mole et vultus populifer quaque primoque non Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n"
    }
,
    {
        "ref": "https://julianstanley.com/blog/rich-content/",
        "title": "Rich Content",
        "section": "blog",
        "tags": [],
        "date" : "2019.01.01",
        "body": "Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode koloot.design   View More on Instagram   \nYouTube Privacy Enhanced Shortcode   \nTwitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 \nVimeo Simple Shortcode "
    }
]
